Do zdobycia dzisiaj 1.5 pkt.

Zadania można oddawać do końca dnia z uwagą taką, że:
Osoby, które nie były na zajęciach oraz nie mające usprawiedliwienia otrzymują i tak zero punktów za zadania.
Po pierwszym deadline, którym jest dzisiaj godzina 14.00 punkty będą maleć liniowo do końca dnia.


Zadanie 1 (0.3 pkt)

Zaimplementuj niemodyfikowalną klasę Point opisującą punkt na płaszczyźnie. Dołącz konstruktor ustawiający ją na konkretny punkt, konstruktor bez argumentów ustawiający ją na punkt odniesienia oraz metody: getX, getY, translate, scale oraz show.

Metoda translate przesuwa punkt o podaną w zmiennych odległość w kierunku współrzędnych x i y.

Metoda scale skaluje obie współrzędne o podany współczynnik.

Metoda show wypisuje na ekran współrzędne punktu w następujący sposób:

2.5 4.5// Najpierw x potem y
Zaimplementuj te metody w taki sposób, by w wyniku działania zwracały punkty.

Napisz metodę main, która będzie ręcznie sprawdzać działania powyższych metod (głównie metody show). Metoda main powinna jako argument pobierać punkt a następnie opcję (liczba naturalna) oznaczająca wywołanie konkretnej metody, a mianowicie:

0 - wywołanie metody translate, a potem show
1 - wywołanie metody scale, a potem show
2 - wywołanie translate, potem scale a potem show
3 - wywowłanie scale, potem translate, a potem show
4 - wywołanie tylko show
Należy pamiętać o pobieranie odpowiedniego argumentu podczas wywoływanej opcji.

Nie przewidujemy sytuacji wyjątkowych.

Sample Input 1:

8 11
4
Sample Output 1:

8.0 11.0
Sample Input 2:

3 4
0
1 3
Sample Output 2:

4.0 7.0



Zadanie 2 (0.3 pkt)

Do poprzedniego zadania zdefiniuj klasę podrzędną LabeledPoint z konstruktorem public LabeledPoint(String label, double x, double y) oraz metodę dostępową getLabel.

Ponadto nadpisz metody toString, equals i hashCode dla tej klasy.

Przetestuj działanie programu tak samo jak w poprzednim zadaniu z różnicą taką, że będziemy teraz tworzyć LabeledPoint, a metoda show będzie wypisywac punkt następująco (przykład):

ala 2 3//Label x y
Metod toString, equals oraz hashCode nie trzeba testować w metodzie main.

Zakaładamy że label składa się z jednego słowa.

Sample Input 1:

ala 8 11
4
Sample Output 1:

ala 8.0 11.0
Sample Input 2:

a 3 4
0
1 3
Sample Output 2:

a 4.0 7.0



Zadanie 3 (0.2 pkt)

Napisz program, który będzie wypisywał (od razu) wprowadzany ciąg znaków.

Sample Input:

8 11
Sample Output:

8 11



Zadanie 4 (0.3 pkt)

Jedną z metod wczytywania plików w Javie jest użycie klasy InputStream (patrz poniżej przykład):

InputStream inputstream = new FileInputStream("c:\\data\\input-text.txt");

int data = inputstream.read();
while(data != -1) {
  //do something with data...
  doSomethingWithData(data);

  data = inputstream.read();
}
inputstream.close();
Zapisywanie plików odbywa się przy użyciu klasy OutputStream (patrz przykład poniżej):

OutputStream output = null;

try{
  output = new FileOutputStream("c:\\data\\output-text.txt");

  while(hasMoreData()) {
    int data = getMoreData();
    output.write(data);
  }
} finally {
    if(output != null) {
        output.close();
    }
}
Napisz program, który kopiuje wszystko z InputStream do OutputStream (w pliku Output.java). Program powinien jako argument przyjmować nazwę pliku, a więc wywołanie programu powinno wyglądać następująco:

java Output test.txt
Przyjmujemy następującą konwencję plików:

Input: test.txt Output: test_output.txt
Input: ala.txt Output: ala_output.txt
Nie zmieniać zawartości plików test.txt oraz ala.txt.

You have an unlimited number of attempts.
Time limit: 60 mins



Zadanie 5 (0.4 pkt)

Tutaj (https://stepik.org/media/attachments/lesson/206092/opencsv.zip)  znajdują się pliki pozwalające operować na plikach o roszerzeniu .csv

Ponadto tutaj (https://stepik.org/media/attachments/lesson/206092/test1.csv) znajduje się plik test1.csv, którego zawartość wygląda następująco: 

Imie,Nazwisko,Zad1,Zad2,Zad3,Zad4,Zad5
Anastasia,Scouller,0,0,2,1,2
Merlina,McAvaddy,2,1,2,1,2
...
Wykorzystując bibliotekę opencsv napisz program, który będzie wczytywał plik z rozszerzeniem .csv oraz zapisywał w innym pliku .csv osoby, które uzyskały dany próg punktowy.

Plik oraz próg punktowy ma być podany jako argument programu.

Przykładowe wywołanie programu:

java Open test.csv 6
Powinno utworzyć plik o nazwie test_output.csv o następującej zawartości:

Imie,Nazwisko,Zad1,Zad2,Zad3,Zad4,Zad5
Merlina,McAvaddy,2,1,2,1,2
...
Program należy kompilować i uruchamiać jednocześnie dodawając pliki o rozszerzeniu .jar.

Poniżej jest przykładowy kod użycia biblioteki opencsv:

import com.opencsv.CSVReader;
import java.io.IOException;
import java.io.Reader;
import java.nio.file.Files;
import java.nio.file.Paths;

public class OpenCSVReader {
    private static final String SAMPLE_CSV_FILE_PATH = "test.csv";

    public static void main(String[] args) throws IOException {
        try (
            Reader reader = Files.newBufferedReader(Paths.get(SAMPLE_CSV_FILE_PATH));
            CSVReader csvReader = new CSVReader(reader,';');
        ) {
            // Reading Records One by One in a String array
            String[] nextRecord;
            while ((nextRecord = csvReader.readNext()) != null) {
                System.out.println("Name : " + nextRecord[0]);
                System.out.println("Email : " + nextRecord[1]);
                System.out.println("Phone : " + nextRecord[2]);
                System.out.println("Country : " + nextRecord[3]);
                System.out.println("==========================");
            }
        }
    }
}
Jako odpowiedź prześlij następujące rzeczy:

Screen z kompilowania i uruchamiania programu
Kod programu (wklejony odpowiednio przy użyciu klamer w serwisie)
Zawartość wynikowa pliku test1.csv dla następujących progów (ilość linii).
 4
7
10
5
11



Zadanie 6 (0.5 pkt) - Dodatkowe

Korzystanie z obiektu Scanner jest wygodne, ale odrobinę wolniejsze niż BufferedReader. Napisz program, który wczyta pewien długi plik (powiedzmy 10000 wierszy) i wyświetli na ekranie liczbę wierszy. Wykorzystaj i porównaj następujące obiekty i ich metody:

Klasa scanner i metoda hasNextLine oraz nextLine
Klasa BufferedReader i metoda readLine
Klasa BufferedReader i metoda lines
Klasa InputStream i dowolna metoda wczytująca linie
Porównanie przedstaw za pomocą wykresu oraz prześlij kod programu (wklej jego kod).